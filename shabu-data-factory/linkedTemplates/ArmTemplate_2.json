{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "shabu-data-factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_S56_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sink",
						"fileSystem": "s56"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S57_Pivot_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "S57_Pivot_Input.csv",
						"folderPath": "pivotInput",
						"fileSystem": "s57"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S57_Pivot_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "pivotOutput",
						"fileSystem": "s57"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S57_UnPivot_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "S57_UnPivot_Input.csv",
						"folderPath": "unpivotInput",
						"fileSystem": "s57"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Credit_ID",
						"type": "String"
					},
					{
						"name": "Credit_Name",
						"type": "String"
					},
					{
						"name": "Master",
						"type": "String"
					},
					{
						"name": "Visa",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S57_UnPivot_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "unpivotOutput",
						"fileSystem": "s57"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S58_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "S58_Input.csv",
						"folderPath": "input",
						"fileSystem": "s58"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Credit_ID",
						"type": "String"
					},
					{
						"name": "Credit_Type",
						"type": "String"
					},
					{
						"name": "Credit_Name",
						"type": "String"
					},
					{
						"name": "EMI_Start_Date",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S58_Log_Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "S58_Log.csv",
						"folderPath": "Logs",
						"fileSystem": "s58"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Log",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S58_Log_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Logs",
						"fileSystem": "s58"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Log",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S58_Output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "s58"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_DB_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Azure_SQL_DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "string"
					},
					"SinkTableSchema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SinkTableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_S46')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "LS_S46_CSV",
								"type": "DatasetReference"
							},
							"name": "source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_CSV_NO_FILE_NAME",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_BLOB_CSV_NO_FILE_NAME",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "PlayerEmailId"
						},
						{
							"name": "aggregatedata"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Match as short,",
						"          PlayerId as short,",
						"          PlayerName as string,",
						"          PlayerScore as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source",
						"source derive(PlayerEmailId = concat(PlayerName,'@gmail.com')) ~> PlayerEmailId",
						"PlayerEmailId aggregate(groupBy(PlayerName),",
						"     TotalScore = sum(PlayerScore)) ~> aggregatedata",
						"PlayerEmailId sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1",
						"aggregatedata sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_S47')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_S47_Customers_CSV",
								"type": "DatasetReference"
							},
							"name": "customerscsv"
						},
						{
							"dataset": {
								"referenceName": "DS_S47_Orders_CSV",
								"type": "DatasetReference"
							},
							"name": "orderscsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Blob_CSV",
								"type": "DatasetReference"
							},
							"name": "sink"
						}
					],
					"transformations": [
						{
							"name": "InnerJoin"
						},
						{
							"name": "selectcolumns"
						},
						{
							"name": "columnsort"
						}
					],
					"scriptLines": [
						"source(output(",
						"          customerid as short,",
						"          customername as string,",
						"          contactname as string,",
						"          country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> customerscsv",
						"source(output(",
						"          customerid as short,",
						"          ordername as string,",
						"          orderdate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> orderscsv",
						"customerscsv, orderscsv join(0==0,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> InnerJoin",
						"InnerJoin select(mapColumn(",
						"          customerid = customerscsv@customerid,",
						"          customername,",
						"          contactname,",
						"          country,",
						"          ordername,",
						"          orderdate",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectcolumns",
						"selectcolumns sort(asc(customerid, true),",
						"     partitionBy('hash', 1)) ~> columnsort",
						"columnsort sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['CrossJoinOutput.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Log_Into_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from emp table to emp_sink",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "TimeStamp",
										"value": {
											"value": "@convertFromUtc(utcNow(),'India standard time')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table emp_sink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "eid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "eid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TimeStamp"
										},
										"sink": {
											"name": "Time_Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": {
										"value": "@pipeline().parameters.PL_Prm_Source_Tab_Name",
										"type": "Expression"
									},
									"SourceTableSchema": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_DB_Sink",
								"type": "DatasetReference",
								"parameters": {
									"SinkTableName": {
										"value": "@pipeline().parameters.PL_Sink_Tab_Name",
										"type": "Expression"
									},
									"SinkTableSchema": "dbo"
								}
							}
						]
					},
					{
						"name": "Stored procedure on Success status",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data from emp table to emp_sink",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipeline_log_usp]",
							"storedProcedureParameters": {
								"CopyActivity_End_Time": {
									"value": {
										"value": "@convertfromutc(activity('Copy data from emp table to emp_sink').ExecutionEndTime,'India standard time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@convertfromutc(activity('Copy data from emp table to emp_sink').ExecutionStartTime,'India standard time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"CopyDuration_in_secs": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.copyDuration}",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": {
										"value": "@Concat('dbo.',pipeline().parameters.PL_Sink_Tab_Name)",
										"type": "Expression"
									},
									"type": "String"
								},
								"EffectiveintegrationRuntime": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ERROR_Message": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').error",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').status",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status_Code": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').statusCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').output.usedParallelCopies",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').output.rowsCopied",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.executionDetails[0].sink.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@concat('dbo.',pipeline().parameters.PL_Prm_Source_Tab_Name)",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{convertFromUtc(pipeline().TriggerTime,'India standard time')}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Azure_SQL_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure on Failure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data from emp table to emp_sink",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[pipeline_log_usp]",
							"storedProcedureParameters": {
								"CopyActivity_End_Time": {
									"value": {
										"value": "@convertfromutc(activity('Copy data from emp table to emp_sink').ExecutionEndTime,'India standard time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"CopyActivity_Start_Time": {
									"value": {
										"value": "@convertfromutc(activity('Copy data from emp table to emp_sink').ExecutionStartTime,'India standard time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"CopyDuration_in_secs": {
									"value": null,
									"type": "String"
								},
								"DataFactory_Name": {
									"value": {
										"value": "@{pipeline().DataFactory}",
										"type": "Expression"
									},
									"type": "String"
								},
								"Destination": {
									"value": null,
									"type": "String"
								},
								"EffectiveintegrationRuntime": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.effectiveIntegrationRuntime}",
										"type": "Expression"
									},
									"type": "String"
								},
								"ERROR_Message": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').error",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').status",
										"type": "Expression"
									},
									"type": "String"
								},
								"Execution_Status_Code": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').statusCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"No_ParallelCopies": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').output.usedParallelCopies",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Pipeline_Name": {
									"value": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"type": "String"
								},
								"RowsCopied": {
									"value": null,
									"type": "String"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('Copy data from emp table to emp_sink').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"Sink_Type": {
									"value": null,
									"type": "String"
								},
								"Source": {
									"value": {
										"value": "@concat('dbo.',pipeline().parameters.PL_Prm_Source_Tab_Name)",
										"type": "Expression"
									},
									"type": "String"
								},
								"Source_Type": {
									"value": {
										"value": "@{activity('Copy data from emp table to emp_sink').output.executionDetails[0].source.type}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerId": {
									"value": {
										"value": "@{pipeline().TriggerId}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@{pipeline().TriggerName}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@{convertFromUtc(pipeline().TriggerTime,'India standard time')}",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@{pipeline().TriggerType}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Azure_SQL_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PL_Prm_Source_Tab_Name": {
						"type": "string"
					},
					"PL_Sink_Tab_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-26T20:59:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DB_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S17_Copy_SQL_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from SQL table to SQL table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_insert_data]",
								"storedProcedureParameters": {
									"empid": {
										"type": "Int32",
										"value": "1004"
									},
									"ename": {
										"type": "String",
										"value": "Arjun"
									},
									"sal": {
										"type": "Decimal",
										"value": "15000"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table emp_sink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "eid",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "eid",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "Time_Stamp"
										},
										"sink": {
											"name": "Time_Stamp"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "emp",
									"SourceTableSchema": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_DB_Sink",
								"type": "DatasetReference",
								"parameters": {
									"SinkTableName": "emp_sink",
									"SinkTableSchema": "dbo"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-26T20:11:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_DB_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S22_Incremental_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_MaxValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select Max(cid) as MaxValue from cust",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "cust",
									"SourceTableSchema": "dbo"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookup_Last_processed_value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from watermark",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "watermark",
									"SourceTableSchema": "dbo"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy data_Incr_Load",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_MaxValue",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Last_processed_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from cust where cid > @{activity('Lookup_Last_processed_value').Output.firstRow.last_processed_value}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "cust",
									"SourceTableSchema": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Blob_CSV",
								"type": "DatasetReference",
								"parameters": {
									"ContainerName": "incrload",
									"FileName": "cust.csv"
								}
							}
						]
					},
					{
						"name": "SP_Update_watermark_Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data_Incr_Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_waermark]",
							"storedProcedureParameters": {
								"lpv": {
									"value": {
										"value": "@{activity('Lookup_MaxValue').output.firstRow.MaxValue}",
										"type": "Expression"
									},
									"type": "String"
								},
								"tablename": {
									"value": "cust",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Azure_SQL_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-01T21:02:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S22_Logic_Apps')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * from metadata where isReady = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "metadata",
									"SourceTableSchema": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Table_List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Metadata').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata_Tables",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_Azure_SQL_DB",
											"type": "DatasetReference",
											"parameters": {
												"SourceTableName": {
													"value": "@item().sourcetable",
													"type": "Expression"
												},
												"SourceTableSchema": {
													"value": "@item().sourceschema",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "If_Table_Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata_Tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metadata_Tables').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait_False",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy data_SQL_to_CSV",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobStorageWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".csv"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Azure_SQL_DB",
														"type": "DatasetReference",
														"parameters": {
															"SourceTableName": {
																"value": "@item().sourcetable",
																"type": "Expression"
															},
															"SourceTableSchema": {
																"value": "@item().sourceschema",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Blob_CSV",
														"type": "DatasetReference",
														"parameters": {
															"ContainerName": {
																"value": "@item().sinkcontainername",
																"type": "Expression"
															},
															"FileName": {
																"value": "@item().sinkfilename",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Stored procedure on Success status",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data_SQL_to_CSV",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[pipeline_log_usp]",
													"storedProcedureParameters": {
														"CopyActivity_End_Time": {
															"value": {
																"value": "@convertfromutc(activity('Copy data_SQL_to_CSV').ExecutionEndTime,'India standard time')",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"CopyActivity_Start_Time": {
															"value": {
																"value": "@convertfromutc(activity('Copy data_SQL_to_CSV').ExecutionStartTime,'India standard time')",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"CopyDuration_in_secs": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.copyDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"DataFactory_Name": {
															"value": {
																"value": "@{pipeline().DataFactory}",
																"type": "Expression"
															},
															"type": "String"
														},
														"Destination": {
															"value": {
																"value": "@item().sinkfilename",
																"type": "Expression"
															},
															"type": "String"
														},
														"EffectiveintegrationRuntime": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.effectiveIntegrationRuntime}",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_Message": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').error",
																"type": "Expression"
															},
															"type": "String"
														},
														"Execution_Status": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Execution_Status_Code": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').statusCode",
																"type": "Expression"
															},
															"type": "String"
														},
														"No_ParallelCopies": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').output.usedParallelCopies",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"Pipeline_Name": {
															"value": {
																"value": "@{pipeline().Pipeline}",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsCopied": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').output.rowsCopied",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsRead": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').output.rowsRead",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"RunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"Sink_Type": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.executionDetails[0].sink.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"Source": {
															"value": {
																"value": "@{item().sourceschema}+'.'+@{item().sourcetable}",
																"type": "Expression"
															},
															"type": "String"
														},
														"Source_Type": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.executionDetails[0].source.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerId": {
															"value": {
																"value": "@{pipeline().TriggerId}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerName": {
															"value": {
																"value": "@{pipeline().TriggerName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerTime": {
															"value": {
																"value": "@{convertFromUtc(pipeline().TriggerTime,'India standard time')}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerType": {
															"value": {
																"value": "@{pipeline().TriggerType}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL_DB",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Failure_SP",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data_SQL_to_CSV",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[pipeline_log_usp]",
													"storedProcedureParameters": {
														"CopyActivity_End_Time": {
															"value": {
																"value": "@convertfromutc(activity('Copy data_SQL_to_CSV').ExecutionEndTime,'India standard time')",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"CopyActivity_Start_Time": {
															"value": {
																"value": "@convertfromutc(activity('Copy data_SQL_to_CSV').ExecutionStartTime,'India standard time')",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"CopyDuration_in_secs": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.copyDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"DataFactory_Name": {
															"value": {
																"value": "@{pipeline().DataFactory}",
																"type": "Expression"
															},
															"type": "String"
														},
														"Destination": {
															"value": null,
															"type": "String"
														},
														"EffectiveintegrationRuntime": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.effectiveIntegrationRuntime}",
																"type": "Expression"
															},
															"type": "String"
														},
														"ERROR_Message": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').error",
																"type": "Expression"
															},
															"type": "String"
														},
														"Execution_Status": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').status",
																"type": "Expression"
															},
															"type": "String"
														},
														"Execution_Status_Code": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').statusCode",
																"type": "Expression"
															},
															"type": "String"
														},
														"No_ParallelCopies": {
															"value": {
																"value": "@activity('Copy data_SQL_to_CSV').output.usedParallelCopies",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"Pipeline_Name": {
															"value": {
																"value": "@{pipeline().Pipeline}",
																"type": "Expression"
															},
															"type": "String"
														},
														"RowsCopied": {
															"value": null,
															"type": "String"
														},
														"RowsRead": {
															"value": null,
															"type": "Int32"
														},
														"RunId": {
															"value": {
																"value": "@pipeline().RunId",
																"type": "Expression"
															},
															"type": "String"
														},
														"Sink_Type": {
															"value": null,
															"type": "String"
														},
														"Source": {
															"value": {
																"value": "concat(@{item().sourceschema},'.',@{item().sourcetable})",
																"type": "Expression"
															},
															"type": "String"
														},
														"Source_Type": {
															"value": {
																"value": "@{activity('Copy data_SQL_to_CSV').output.executionDetails[0].source.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerId": {
															"value": {
																"value": "@{pipeline().TriggerId}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerName": {
															"value": {
																"value": "@{pipeline().TriggerName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerTime": {
															"value": {
																"value": "@{convertFromUtc(pipeline().TriggerTime,'India standard time')}",
																"type": "Expression"
															},
															"type": "String"
														},
														"TriggerType": {
															"value": {
																"value": "@{pipeline().TriggerType}",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_Azure_SQL_DB",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Success_notiication",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_Table_List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-02.southindia.logic.azure.com:443/workflows/d70cf33ba35645709f60f54dc06d9d78/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OUQvHF6UterT8vFBEszVKxszFot7_QdrJ01qSCkSyxc",
							"method": "POST",
							"headers": {},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"EmailTo": "shabu.mohd@gmail.com",
								"PpelineName": "@{pipeline().Pipeline}",
								"Status": "Success!"
							}
						}
					},
					{
						"name": "Failure_notiication",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach_Table_List",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-02.southindia.logic.azure.com:443/workflows/d70cf33ba35645709f60f54dc06d9d78/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=OUQvHF6UterT8vFBEszVKxszFot7_QdrJ01qSCkSyxc",
							"method": "POST",
							"headers": {},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"EmailTo": "shabu.mohd@gmail.com",
								"PpelineName": "@{pipeline().Pipeline}",
								"Status": "Failed!"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-01T00:58:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S24_Multiple_Tables_Incr_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_watermark_table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "metadata_incrLoad",
									"SourceTableSchema": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Table_List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_watermark_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_watermark_table').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup_Get_MaxDate_Value",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT MAX(@{item().deltaCol}) as MaxDateVal FROM @{item().TableName}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_Azure_SQL_DB",
											"type": "DatasetReference",
											"parameters": {
												"SourceTableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SourceTableSchema": {
													"value": "@item().schemaName",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Copy data from SQL Table to CSV",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Lookup_Get_MaxDate_Value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().schemaName}.@{item().TableName} where @{item().deltaCol} > '@{item().Last_processed_Value}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Azure_SQL_DB",
											"type": "DatasetReference",
											"parameters": {
												"SourceTableName": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"SourceTableSchema": {
													"value": "@item().schemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Blob_CSV",
											"type": "DatasetReference",
											"parameters": {
												"ContainerName": {
													"value": "incrload/@{item().containerName}",
													"type": "Expression"
												},
												"FileName": {
													"value": "@item().containerName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_update_watermark_table",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data from SQL Table to CSV",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_waermark_incrLoad]",
										"storedProcedureParameters": {
											"LPV": {
												"value": {
													"value": "@activity('Lookup_Get_MaxDate_Value').output.firstRow.MaxDateVal",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"tabName": {
												"value": {
													"value": "@item().tableName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Azure_SQL_DB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-02T18:39:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S25_Incremental_Load_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Metadata_Table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Azure_SQL_DB",
								"type": "DatasetReference",
								"parameters": {
									"SourceTableName": "metadata_S25",
									"SourceTableSchema": "dbo"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Source_Container",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Metadata_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Metadata_Table').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Upperbound time value",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "upperBound",
										"value": {
											"value": "@if(lessOrEquals(addminutes(item().last_processed_value,item().duration),convertTimeZone(utcnow(), 'utc', 'india standard time')),addminutes(item().last_processed_value,item().duration),convertTimeZone(utcnow(), 'utc', 'india standard time'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy data blob to blob",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Upperbound time value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"modifiedDatetimeStart": {
													"value": "@convertToUtc(item().last_processed_value,'india standard time')",
													"type": "Expression"
												},
												"modifiedDatetimeEnd": {
													"value": "@convertToUtc(variables('upperBound'),'india standard time')",
													"type": "Expression"
												},
												"wildcardFileName": "*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_BLOB_CSV_NO_FILE_NAME",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().sourcecontainer",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_BLOB_CSV_NO_FILE_NAME",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@item().sinkcontainer",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SP_Update_LPV",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data blob to blob",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_metadata_S25]",
										"storedProcedureParameters": {
											"containerName": {
												"value": {
													"value": "@item().sourcecontainer",
													"type": "Expression"
												},
												"type": "String"
											},
											"lpv": {
												"value": {
													"value": "@variables('upperBound')",
													"type": "Expression"
												},
												"type": "Datetime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Azure_SQL_DB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"upperBound": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-07T16:37:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S46_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_S46",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source": {},
									"sink1": {
										"containername": "output1"
									},
									"sink2": {
										"containername": "output2"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-14T21:02:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_S46')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_S47_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow S47",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_S47",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerscsv": {},
									"orderscsv": {},
									"sink": {
										"ContainerName": "output",
										"FileName": "JoinOutput.csv"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-14T21:04:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_S47')]"
			]
		}
	]
}